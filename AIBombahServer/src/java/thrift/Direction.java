/**
 * Autogenerated by Thrift Compiler (0.8.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package thrift;


public enum Direction implements TEnum {
  N(0),
  NE(1),
  E(2),
  SE(3),
  S(4),
  SW(5),
  W(6),
  NW(7);

  private final int value;

  private Direction(int value) {
    this.value = value;
  }

  /**
   * Get the integer value of this enum value, as defined in the Thrift IDL.
   */
  public int getValue() {
    return value;
  }

  /**
   * Find a the enum type by its integer value, as defined in the Thrift IDL.
   * @return null if the value is not found.
   */
  public static Direction findByValue(int value) { 
    switch (value) {
      case 0:
        return N;
      case 1:
        return NE;
      case 2:
        return E;
      case 3:
        return SE;
      case 4:
        return S;
      case 5:
        return SW;
      case 6:
        return W;
      case 7:
        return NW;
      default:
        return null;
    }
  }
}
